.bird {
	background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
	background-size: auto 100%;
	width: 88px; //const
	height: 125px; //const
	will-change: background-position;

	animation-name: fly-cycle; //battement des ailes
	animation-timing-function: steps(10);
	animation-iteration-count: infinite; //boucler l'animation

	/*
	DESCRIPTION (animation battement):
	 => On definisse ici l'animation de battement pour chaque oiseau
		- animation-duration: duration du battement des ailes - c'est la duree d'une animation pour parcourir un cycle.
		- animation-delay: temps d'apparition (debut de l'animation) - plus sa valeur est grande, plus l'animation mettra du temps a demarrer 
	*/

	/*
	FEATURES:
		- On varie la valeur de `animation-duration` entre [0.5;1.5] pour une vitesse de battement different pour chaque oiseau
	  - On varie la valeur de `animation-delay -> --beat-behaviour` entre [0;5] pour un battement plus realiste
	*/

	//TODO: verified
	&--beat {
		animation-duration: var(--beat-speed);
		animation-delay: var(--beat-realismBehaviour);
	}
}

/*
DESCRIPTION (animation deplacement):
	=> "bird-container" qui charge du deplacement(vitesse, direction, ...) de chaque oiseau
	- top: position de depart par rapport a l'axe Y
	- left: position de depart par rapport a l'axe X (on passe une valeur negative pour que les oiseaux)
	- animation-duration: vitesse par seconde de deplacement des oiseaux
*/

/*
	FEATURES:
		- On varie `translateY` de `transform` tout les N seconde pour eviter un deplacement horizontale constante
	*/

.bird-container {
	position: absolute;
	// width: 2vh; //cible size
	// height: 2vh;
	top: var(--heightPosition); //valeur Y
	left: -10%; //default value = -10%
	transform: scale(0) translateX(-10vw);
	will-change: transform;

	animation-name: fly-right; //deplacement vers la droite
	animation-timing-function: linear; //deplacement lineaire
	animation-iteration-count: infinite; //boucler l'animation

	border: solid orangered 5px;

	//TODO: generate this in script
	&--shift {
		animation-duration: 5s; //vitesse de deplacement
		animation-delay: var(--startingPosition); //position de depart par rapport a X
	}
}

@keyframes fly-cycle {
	100% {
		background-position: -900px 0;
	}
}

//TODO: translateY value random

@keyframes fly-right {
	0% {
		transform: scale(0.3) translateX(-10vw);
	}

	10% {
		transform: translateY(10vh) translateX(10vw) scale(0.4);
	}

	20% {
		transform: translateY(5vh) translateX(30vw) scale(0.5);
	}

	30% {
		transform: translateY(12vh) translateX(50vw) scale(0.6);
	}

	40% {
		transform: translateY(5vh) translateX(70vw) scale(0.6);
	}

	50% {
		transform: translateY(0vh) translateX(90vw) scale(0.6);
	}

	60% {
		transform: translateY(4vh) translateX(110vw) scale(0.6);
	}

	100% {
		transform: translateY(0vh) translateX(110vw) scale(0.6);
	}
}
